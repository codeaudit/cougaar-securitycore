####################################################
# ihmc_policy_domain_mgr_agents.rule
# Adds PolicyDomainManagers 

node = nil
society.each_node {|n| node = n}
enclaves = 1..4 # there are 4 enclaves...do this once per enclave
enclaves.each do |this_enclave|
  policy_domain_mgr = "PolicyDomainManager" + this_enclave.to_s
  node.add_agent(policy_domain_mgr) do |agent|
    agent.add_component do |c|
      c.classname = "org.cougaar.mlm.plugin.organization.OrgReportPlugin"
    end
    agent.add_component do |c|
      c.classname = "org.cougaar.mlm.plugin.organization.OrgDataPlugin"
    end
    agent.add_component do |c|
      c.classname = "safe.policyManager.DomainManagerPlugin"
      c.add_argument("domainName=PolicyDomainManager" + this_enclave.to_s + "Domain")
      c.add_argument("useJTP=true")
      c.add_argument("ontologySet=ultralog")
    end
    agent.add_component do |c|
      c.classname = "safe.policyManager.ConditionMonitorPlugin"
    end
    agent.add_component do |c|
      c.classname = "safe.policyManager.SetOperatingModeServletComponent"
    end
    agent.add_component do |c|
      c.classname = "org.cougaar.core.adaptivity.OperatingModePolicyManager"
    end
    agent.add_component do |c|
      c.classname = "org.cougaar.core.adaptivity.OperatingModeServiceProvider"
    end
    agent.add_component do |c|
      c.classname = "org.cougaar.core.adaptivity.PlaybookManager"
      c.add_argument("dummyPlays.txt")
    end
    agent.add_component do |c|
      c.classname = "safe.policyManager.PolicyExpanderPlugin"
    end
  end
end