
Policy DamlBootPolicyAllowCommunication = [ 
   Priority = 2,
   $Actor.daml#Agent is authorized to perform
   $Action.daml#EncryptedCommunicationAction as long as
    the value of $Action.daml#hasDestination
    is a subset of the set $Actor.daml#Agent
]

Policy DamlBootPolicyEncryptCommunication = [ 
   Priority = 3,
   $Actor.daml#Agent is not authorized to perform
   $Action.daml#EncryptedCommunicationAction as long as
    the value of $Ultralog/UltralogAction.daml#usedProtectionLevel
    is a subset of the complement of the set
     { $Ultralog/Names/EntityInstances.daml#NSAApprovedProtection }
]


Policy DamlBootPolicyAllowBlackboard = [ 
   Priority = 2,
   $Ultralog/UltralogActor.daml#UltralogPlugins is authorized to perform
   $Ultralog/UltralogAction.daml#BlackBoardAccess as long as
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessObject
    is a subset of the complement of the set
     { $Ultralog/Names/EntityInstances.daml#OrgActivity }
]

Policy DamlBootPolicyOrgActivityAdd = [
   Priority = 2,
   $Ultralog/Names/EntityInstances.daml#PluginsInRoleOrgActivityAddRole 
   is authorized to perform
   $Ultralog/UltralogAction.daml#BlackBoardAccess
   as long as
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessObject
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#OrgActivity }   
                      and
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessMode
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#BlackBoardAccessAdd
       $Ultralog/Names/EntityInstances.daml#BlackBoardAccessRead
       $Ultralog/Names/EntityInstances.daml#BlackBoardAccessWrite
       $Ultralog/Names/EntityInstances.daml#BlackBoardAccessCreate }
]

Policy DamlBootPolicyOrgActivityChange = [
   Priority = 2,
   $Ultralog/Names/EntityInstances.daml#PluginsInRoleOrgActivityChangeRole 
   is authorized to perform
   $Ultralog/UltralogAction.daml#BlackBoardAccess
   as long as 
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessObject
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#OrgActivity }   
                      and
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessMode
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#BlackBoardAccessChange
       $Ultralog/Names/EntityInstances.daml#BlackBoardAccessRead
       $Ultralog/Names/EntityInstances.daml#BlackBoardAccessWrite }
]

Policy DamlBootPolicyOrgActivityQuery = [
   Priority = 2,
   $Ultralog/Names/EntityInstances.daml#PluginsInRoleOrgActivityQueryRole 
   is authorized to perform
   $Ultralog/UltralogAction.daml#BlackBoardAccess
   as long as
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessObject
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#OrgActivity }   
                      and
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessMode
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#BlackBoardAccessQuery
       $Ultralog/Names/EntityInstances.daml#BlackBoardAccessRead }
]

Policy DamlBootPolicyOrgActivityRemove = [
   Priority = 2,
   $Ultralog/Names/EntityInstances.daml#PluginsInRoleOrgActivityQueryRole 
   is authorized to perform
   $Ultralog/UltralogAction.daml#BlackBoardAccess
   as long as
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessObject
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#OrgActivity }   
                      and
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessMode
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#BlackBoardAccessRemove }
]

Policy DamlBootPolicyOrgActivityAll = [
   Priority = 2,
   $Ultralog/Names/EntityInstances.daml#PluginsInRoleOrgActivityAllRole 
   is authorized to perform
   $Ultralog/UltralogAction.daml#BlackBoardAccess
   as long as
    the value of $Ultralog/UltralogAction.daml#blackBoardAccessObject
    is a subset of the set
     { $Ultralog/Names/EntityInstances.daml#OrgActivity }   
]


Policy DamlBootPolicyUnrestServlet = [ 
   Priority = 2,
   $Actor.daml#Person is authorized to perform
   $Action.daml#AccessAction as long as
    the value of $Ultralog/UltralogAction.daml#accessedServlet
    is a subset of the set { $Ultralog/Names/EntityInstances.daml#OtherServlets 
                             $Ultralog/Names/EntityInstances.daml#CAReadServlet 
                             $Ultralog/Names/EntityInstances.daml#CertReqServlet }
]

Policy DamlBootPolicyServletRestAuth = [ 
   Priority = 3,
   $Actor.daml#Person is not authorized to perform
   $Action.daml#AccessAction as long as
    the value of $Ultralog/UltralogAction.daml#accessedServlet
    is a subset of the complement of the set 
       { $Ultralog/Names/EntityInstances.daml#OtherServlets
         $Ultralog/Names/EntityInstances.daml#CAReadServlet 
         $Ultralog/Names/EntityInstances.daml#CertReqServlet }
                       and
    the value of $Ultralog/UltralogAction.daml#usedAuthenticationLevel
    is a subset of the set
       { $Ultralog/Names/EntityInstances.daml#NoAuth
         $Ultralog/Names/EntityInstances.daml#NoAuthSSL }
]

Policy DamlBootPolicyPolicyServletRear  = [ 
  A user in role RearPolicyAdministrator can access a servlet 
  named RearPolicyServlet
]

Policy DamlBootPolicyPolicyServletFwd  = [ 
  A user in role FwdPolicyAdministrator can access a servlet 
  named FwdPolicyServlet
]

Policy DamlBootPolicyPolicyServletConus  = [ 
  A user in role ConusPolicyAdministrator can access a servlet 
  named ConusPolicyServlet
]

Policy DamlBootPolicyPolicyServletTrans  = [ 
  A user in role TransPolicyAdministrator can access a servlet 
  named TransPolicyServlet
]

Policy DamlBootPolicySCmrManager  = [ 
  A user in role MonitorManager can access a servlet named SCmrmanagerServlets
]

Policy DamlBootPolicyNCAServlet = [
  A user in role Logistician can access a servlet named NCAServlets
]

Policy DamlBootPolicyLogisticianAgg = [
  A user in role Logistician can access a servlet named AggegatorServlets
]

Policy DamlBootPolicyLogisticianViewAgg = [
  A user in role LogisticsViewer can access a servlet named AggegatorServlets
]

Policy DamlBootPolicyUserAdminServlets = [
  A user in role UserManager can access a servlet named UserManagerServlets
]

Policy DamlBootPolicyLogisticianInventory = [
  A user in role Logistician can access a servlet named LogInventoryServlet
]

Policy DamlBootPolicyLogisticsViewerInventory = [
  A user in role LogisticsViewer can access a servlet named LogInventoryServlet
]

Policy DamlBootPolicyLogisticianHierarchy = [
  A user in role Logistician can access a servlet named HierarchyServlet
]

Policy DamlBootPolicyLogisticsViewerHierarchy  = [
  A user in role LogisticsViewer can access a servlet named HierarchyServlet
]

Policy DamlBootPolicyCertWrite  = [
  A user in role CAAdministrator can access a servlet named CAWriteServlet
]

Policy DamlBootPolicySocietyAdmin = [
  A user in role SocietyAdmin can access a servlet named SocietyAdminServlet
]
