Keystore password:
------------------

New in JDK 1.4:
===============
Unlimited strength jurisdiction files must be installed in the JRE

Extracting certificates from JAR files
======================================
A signed jar file contains a signature block file (usually META-INF/foo.DSA).
This file contains a PKCS7-encode signature and certificates.
The certificates may be extracted by using openssl tools.
First, extract the DSA file from the jar file.
On the command line, type:
   openssl pkcs7 -inform DER -in FOO.DSA -print_certs -out certs.cer 

Keystores containing certificates of trusted CAs
================================================
test/configs/common/keystoreCA			Ultra*Log

Keystores containing key pairs of CAs
=====================================
keystore-CONUS					CONUS-Ultra*Log
keystore-Support				Support-Ultra*Log
keystore-Combat					Combat-Ultra*Log

Keystores containing keys for nodes and agents
==============================================

test/configs/certauthority/keystoreTest		Ultra*Log

Keystores containing keys for the ul-mini-config society
========================================================

test/configs/ul-mini-config*/keystore-Commercial-Air	ul-manzanita
test/configs/ul-mini-config*/keystore-2nd-Brigade	ul-redwood
test/configs/ul-mini-config*/keystore-3rd-Brigade	ul-maple
test/configs/ul-mini-config*/keystore-HQ		ul-joshua
test/configs/ul-mini-config*/keystore-NCA		ul-dogwood
test/configs/ul-mini-config*/keystore-NCADomainManager	ul-NCADomainManager
test/configs/ul-mini-config*/keystore-Support		ul-fir



Cryptographic providers
=======================

Cryptix
-------
Cryptix 3 is a cleanroom implementation of Sun's Java Cryptography Extensions (JCE) version 1.1.
In addition to that it contains the Cryptix Provider which delivers a wide range of algorithms
and support for PGP 2.x. Cryptix 3 runs on JDK 1.1, JDK 1.2 (Java 2) and JDK 1.3. 

cryptix-jce-api.jar
cryptix-jce-provider.jar

SUN JCE 1.2
-----------
jce1_2-do.jar


JSSE
----
jcert.jar
jnet.jar 
jsse.jar 

SUN JCE 1.2.1
=============
One difference between JCE 1.2 and 1.2.1 is the fact that providers must be signed by a trusted
entity.
The SUN JCE 1.2.1 includes the following files:
* sunjce_provider
* US_export_policy
* local_policy
* jce_1_2_1.jar


Installation instructions for SUN JCE 1.2.1:
============================================
* Remove the SUN JCE 1.2 jar file (jce1_2-do.jar) from ${COUGAAR_INSTALL_PATH}/sys.
* Move or copy the JCE 1.2.1 framework file jce1_2_1.jar and jurisdiction policy files
  (US_export_policy.jar, and local_policy.jar) to a directory that will be listed on your
  class path. (Note: All these files must be in the same directory.)
* Move or copy the "SunJCE" provider file sunjce_provider.jar to another directory
  that will be listed on your class path. It can be the same as the directory containing
  the JCE 1.2.1 framework, or a different directory. 
* The following permission should be granted to the JCE 1.2.1 framework when a security
  manager is installed:
      java.security.AllPermission

  For example:
  grant codeBase "file:/home/mydir/jce1_2_1.jar" {
    permission java.security.AllPermission;
  };

* The following permissions should be granted to the "SunJCE" provider
  (and other JCE providers) when a security manager is installed:
      java.io.FilePermission to read the jce1_2_1.jar file 
      java.lang.RuntimePermission to get class protection domains 
      java.security.SecurityPermission to put (set) provider properties.

  For example:
   grant codeBase "file:/work/sunjce_provider.jar" {
    permission java.io.FilePermission
      "/home/mydir/jce1_2_1.jar", "read";
    permission java.lang.RuntimePermission 
      "getProtectionDomain";
    permission java.security.SecurityPermission
      "putProviderProperty.SunJCE";
  };

* Register the "SunJCE" provider. 
	Security.addProvider(new com.sun.crypto.provider.SunJCE())
