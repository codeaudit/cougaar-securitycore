<?xml version="1.0" encoding="UTF-8"?>

<!-- 
    Ant build script for Ultra*Log securityservices. 
     
    Usage: ant [-v] <target>
     
    Run ant in the current directory.  If no target is specified, ant will build
    securityservices, jar and sign the jars.  Include  "-v" with ant for verbose mode.
     
    target:
        all - build, jar and sign securityservices (default).
        cvs-update - execute "cvs update -d" in the current directory
        with-update - execute the cvs-update and all targets
        install - execute the all target, and install securityservices 
                  signed jars and configuration files
        javadocs - create javadocs for securityservices
        tar-docs - tar and zip the javadocs
        help - print out usage message     
-->

<project basedir="." default="all" name="Ultra*Log/securityservices">
  
    <!-- prefix for all environment variables -->
    <property environment="env"/>
    <property name="cougaar.install.path" value="${env.COUGAAR_INSTALL_PATH}"/>
    <property name="securityservices.base" value="."/>
    <property name="securityservices.sys" value="${securityservices.base}/sys"/>
    <property name="securityservices.lib" value="${securityservices.base}/lib"/>
    <property name="securityservices.docdir" value="${securityservices.base}/doc"/>
    <property name="securityservices.configs" value="${securityservices.base}/test/configs"/> 
    <!-- The classes directory for output classes and jar files -->
    <property name="securityservices.classes" value="classes"/>
    <!-- The output directory for signed jar files -->
    <property name="securityservices.signed" value="${securityservices.classes}/signed"/>
    <!-- The base directories where the java source files are located -->
    <property name="securityservices.src" value="${securityservices.base}/src"/>

    <path id="securityservices.class.path">    
        <!-- Cougaar 3rd party support packages -->
        <pathelement location="${cougaar.install.path}/sys/jasper-runtime.jar"/>
        <pathelement location="${cougaar.install.path}/sys/servlet.jar"/>
        <pathelement location="${cougaar.install.path}/sys/log4j.jar"/>
        <pathelement location="${cougaar.install.path}/sys/silk.jar"/>
        <pathelement location="${cougaar.install.path}/sys/ibmpkcs.jar"/>
        <pathelement location="${cougaar.install.path}/sys/idmef.jar"/>
        <pathelement location="${cougaar.install.path}/sys/jpython.jar"/>
        <pathelement location="${cougaar.install.path}/sys/xerces.jar"/>
        <!-- Tomcat libraries -->
        <pathelement location="${cougaar.install.path}/sys/tomcat_40.jar"/>
        <pathelement location="${cougaar.install.path}/lib/webserver.jar"/>
        <!-- Cougaar packages -->
        <pathelement location="${cougaar.install.path}/lib/build.jar"/>
        <pathelement location="${cougaar.install.path}/lib/glm.jar"/>
        <pathelement location="${cougaar.install.path}/lib/planserver.jar"/>
        <pathelement location="${cougaar.install.path}/lib/core.jar"/>
        <pathelement location="${cougaar.install.path}/lib/util.jar"/>
        <pathelement location="${cougaar.install.path}/lib/bootstrap.jar"/>
        <!-- Overlay packages -->
        <pathelement location="${cougaar.install.path}/lib/overlay.jar"/>
        <!-- KAoS libraries -->
        <pathelement location="${cougaar.install.path}/sys/mail.jar"/>
        <pathelement location="${cougaar.install.path}/lib/kaos.jar"/>
        <pathelement location="${cougaar.install.path}/lib/safe.jar"/>
    </path>
    
    <!-- task definition for javamake -->
    <!-- <taskdef name="javamake" classname="com.sun.tools.javamake.ant.JavaMake"/> -->
    <!-- javamake global property file -->
    <!-- <property name="javamake.pdb.filename" value="classes/securityservices.pdb"/> -->

    <target name="tstamp">
        <tstamp>
            <format property="currentTime" pattern="MM/dd/yyyy hh:mm:ss"/>
        </tstamp>
        <echo message="Build started at ${currentTime}"/>
    </target>

    <target name="init" depends="install-build-jars">
        <mkdir dir="${securityservices.classes}"/>
        <mkdir dir="${securityservices.signed}"/>
        <mkdir dir="${securityservices.docdir}"/>
    </target>
    
    <!-- Build the JavaIDMEF library -->
    <target name="build-idmef" depends="init">
        <echo message="+++++ Building JavaIDMEF"/>
        <javac classpathref="securityservices.class.path" debug="true" 
            deprecation="true" destdir="${securityservices.classes}" 
            includes="edu/jhuapl/idmef/*.java" srcdir="${securityservices.src}"/>
        <echo message="+++++ Built JavaIDMEF"/>
    </target>
    
    <!-- Build the org.cougaar.core.security package -->
    <target name="build-securityservices" depends="init, build-idmef">
        <echo message="+++++ Building security services"/>
        <javac classpathref="securityservices.class.path" debug="true" 
            deprecation="true" destdir="${securityservices.classes}"
            includes="org/cougaar/core/security/**" srcdir="${securityservices.src}"/>
        <echo message="+++++ Built security services"/>
    </target>
    
    <!-- jar JavaIDMEF -->
    <target name="jar-idmef" depends="build-idmef">
        <jar jarfile="${securityservices.classes}/idmef.jar">
            <fileset dir="${securityservices.classes}"
                includes="edu/jhuapl/idmef/*.class"/>
            <fileset dir="${securityservices.src}" includes="edu/jhuapl/idmef/*.dtd"/>
        </jar>
    </target>
    
    <!-- jar security services -->
    <!-- TODO: SecurityComponent.class is a hack until KAOS has been fixed -->
    <target name="jar-securityservices" depends="build-securityservices">
        <echo message="+++++ Building jar files"/>
        <jar jarfile="${securityservices.classes}/bootstrapper.jar" 
            basedir="${securityservices.classes}"
            includes="org/cougaar/core/security/bootstrap/*.class"/>
        <jar jarfile="${securityservices.classes}/securebootstrapper.jar" 
            basedir="${securityservices.classes}"
            includes="org/cougaar/core/security/securebootstrap/*.class"/>
        <jar jarfile="${securityservices.classes}/securityservices.jar"
            basedir="${securityservices.classes}"
            includes="org/cougaar/core/security/**/*.class,
		     org/cougaar/core/security/SecurityComponent.class"
            excludes="org/cougaar/core/security/*bootstrap/**,
                      org/cougaar/core/security/**/test/**,
                      org/cougaar/core/security/oldmonitoring/**"/>
        <jar jarfile="${securityservices.classes}/CougaarCRLextensions.jar"
            basedir="${securityservices.classes}"
            includes="org/cougaar/core/security/crlextension/**"/>
        <echo message="+++++ Built jar files"/>
    </target>
    
    <!-- sign security services -->
    <target name="sign-jars" depends="jar-idmef, jar-securityservices">
        <echo message="+++++ Signing jar files"/>
        <signjar jar="${securityservices.classes}/bootstrapper.jar" alias="bootstrapper" 
            signedjar="${securityservices.signed}/bootstrapper.jar"
            keystore="${cougaar.install.path}/configs/common/signingCA_keystore" 
            storepass="keystore" verbose="false"/>
        <signjar jar="${securityservices.classes}/securebootstrapper.jar" alias="bootstrapper" 
            signedjar="${securityservices.signed}/securebootstrapper.jar"
            keystore="${cougaar.install.path}/configs/common/signingCA_keystore" 
            storepass="keystore" verbose="false"/>
        <signjar jar="${securityservices.classes}/securityservices.jar" alias="privileged" 
            signedjar="${securityservices.signed}/securityservices.jar"
            keystore="${cougaar.install.path}/configs/common/signingCA_keystore" 
            storepass="keystore" verbose="false"/>
        <signjar jar="${securityservices.classes}/CougaarCRLextensions.jar" alias="privileged" 
            signedjar="${securityservices.signed}/CougaarCRLextensions.jar"
            keystore="${cougaar.install.path}/configs/common/signingCA_keystore" 
            storepass="keystore" verbose="false"/>
        <signjar jar="${securityservices.classes}/idmef.jar" alias="privileged" 
            signedjar="${securityservices.signed}/idmef.jar"
            keystore="${cougaar.install.path}/configs/common/signingCA_keystore" 
            storepass="keystore" verbose="false"/>
        <echo message="+++++ Signed jar files"/>
    </target>
    
    <!-- install security services -->
    <target name="install-signed-jars" depends="sign-jars">
        <echo message="+++++ Installing signed jar files"/>
        <copy file="${securityservices.signed}/bootstrapper.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.signed}/securebootstrapper.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.signed}/securityservices.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.signed}/CougaarCRLextensions.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.signed}/idmef.jar" 
            todir="${cougaar.install.path}/lib"/>
        <echo message="+++++ Installed signed jar files"/>
    </target>
    
    <target name="install-unsigned-jars" depends="jar-idmef, jar-securityservices">
        <echo message="+++++ Installing jar files"/>
        <copy file="${securityservices.classes}/bootstrapper.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.classes}/securebootstrapper.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.classes}/securityservices.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.classes}/CougaarCRLextensions.jar" 
            todir="${cougaar.install.path}/lib"/>
        <copy file="${securityservices.classes}/idmef.jar" 
            todir="${cougaar.install.path}/lib"/>
        <echo message="+++++ Installed jar files"/>
    </target>
    
    <!-- install build depended jars -->
    <target name="install-build-jars">
        <echo message="+++++ Installing jar files"/>
        <copy todir="${cougaar.install.path}/sys">
            <fileset dir="${securityservices.sys}">
                <include name="*.jar"/>
                <exclude name="jasper-compiler.jar"/>
            </fileset>
        </copy>
        <copy todir="${cougaar.install.path}/lib">
            <fileset dir="${securityservices.lib}" includes="*.jar"/>
        </copy>
        <echo message="+++++ Installed jar files"/>        
    </target>
    
    <!-- install config files -->
    <target name="install-conf">
        <echo message="+++++ Installing configuration files"/>
        <copy todir="${cougaar.install.path}/configs">
            <fileset dir="${securityservices.configs}">
                <patternset>
                    <include name="common/*"/>
                    <include name="small-135/*"/>
                    <exclude name="**/CVS/**"/>
                </patternset>
            </fileset>
        </copy>
        <copy todir="${cougaar.install.path}/webtomcat/data/conf"
            file="${securityservices.configs}/tomcat4/server.xml"/>    
        <copy todir="${cougaar.install.path}/webtomcat/data/webapps/ROOT/WEB-INF"
            file="${securityservices.configs}/tomcat4/web.xml"/>
        <echo message="+++++ Installed configuration files"/>
    </target>
    
    <target name="confnai">
        <copy todir="${cougaar.install.path}/configs/small-135"
            file="${securityservice.configs}/mysql/cougaar.rc"/>
    </target>
    
    <!-- create log directories -->
    <target name="create-log-dirs">
        <echo message="+++++ Creating log directories"/>
        <delete dir="${cougaar.install.path}/log" includeEmptyDirs="true" quiet="true"/>
        <delete file="${cougaar.install.path}/sys/tomcat_33.jar" verbose="true"/>
        <mkdir dir="${cougaar.install.path}/log/bootstrap"/>
        <mkdir dir="${cougaar.install.path}/log/core"/>
        <mkdir dir="${cougaar.install.path}/log/plugin"/>
        <echo message="+++++ Created log directories"/>
    </target>

    <target name="compile-jsps">
        <exec>
        </exec>
    </target>
    
    <!-- The ALL target only compiles, jar, and sign jars -->
    <target name="all" depends="tstamp, init, sign-jars">
        <echo message="Ultra*Log/securityservices Build Complete"/>
        <echo message="***** Don't forget to run 'ant install' *****"/>
        <echo message="***** Don't forget to run 'ant confnai' *****"/>
        <echo message="***** DO NOT FORGET to modify the alpreg.ini file *****"/>
    </target>
    
    <!-- The INSTALL target does everything but cvs-update and javadoc -->
    <target name="install" depends="tstamp, init, install-conf, install-signed-jars, create-log-dirs">
        <echo message="Ultra*Log/securityservices Build Complete"/>
        <echo message="***** Don't forget to run 'ant confnai' *****"/>
        <echo message="***** DO NOT FORGET to modify the alpreg.ini file *****"/>
    </target>
    
    <!-- Updating repository before building -->
    <target name="cvs-update">
      <cvs cvsRoot="${env.CVSROOT}" command="update -d"/>
    </target>
    
    <!-- use 'ant with-update' to update repository executing the ALL target -->
    <target name="with-update" depends="cvs-update, all"/>
    
    <!-- create javadocs for security services and JavaIDMEF -->
    <target name="javadocs" depends="init" description="Generating security services and idmef javadocs">
        <echo message="Creating JavaDocs for security services and JavaIDMEF"/>
        <delete file="${securityservices.docdir}/javadoc.tar.gz" verbose="true"/>
        <javadoc classpathref="securityservices.class.path" destdir="${securityservices.docdir}"
            windowtitle="Ultra*Log/securityservices API" sourcepath="${securityservices.src}" 
            packagenames="edu.jhuapl.idmef.*, org.cougaar.core.security.*" 
            excludepackagenames="org.cougaar.core.security.oldmonitoring.*, 
                                 org.cougaar.core.security.test.*"
            author="true" version="true"/>
        <echo message="Generated JavaDocs for security services and JavaIDMEF"/>
    </target>
	
	  <!-- tar up javadoc and delete all files -->
	  <target name="tar-docs" depends="javadocs">
        <tar tarfile="${securityservices.docdir}/javadoc.tar" basedir="${securityservices.docdir}"
            includes="*.html, *.css, edu/*, org/*" 
            includesfile="${securityservices.docdir}/package-list"/>
        <gzip zipfile="${securityservices.docdir}/javadoc.tar.gz" 
            src="${securityservices.docdir}/javadoc.tar"/>
        <delete file="${securityservices.docdir}/javadoc.tar" verbose="true"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${securityservices.docdir}">
                <patternset>
                    <include name="**/**"/>
                    <exclude name="**/*.gz"/>
                </patternset>
            </fileset>
        </delete>
    </target>
    
    <!-- Delete the edu, com, and org class directories, and jar files -->
    <target name="clean">
        <echo message="+++++ Cleaning build environment"/>
        <delete dir="${securityservices.classes}/edu" includeEmptyDirs="true" quiet="true"/>
        <delete dir="${securityservices.classes}/com" includeEmptyDirs="true" quiet="true"/>
        <delete dir="${securityservices.classes}/org" includeEmptyDirs="true" quiet="true"/>
        <delete dir="${securityservices.signed}" includeEmptyDirs="true" quiet="true"/>
        <delete file="${securityservices.classes}/bootstrapper.jar" verbose="true"/>
        <delete file="${securityservices.classes}/securebootstrapper.jar" verbose="true"/>
        <delete file="${securityservices.classes}/securityservices.jar" verbose="true"/>
        <delete file="${securityservices.classes}/CougaarCRLextensions.jar" verbose="true"/>
        <delete file="${securityservices.classes}/idmef.jar" verbose="true"/>
        <echo message="+++++ Cleaned build environment"/>
    </target>
    
    <target name="help">
        <echo message="Ant build script for Ultra*Log securityservices."/>
        <echo message=""/>
        <echo message="Usage: ant [-v] &lt;target&gt;"/>
        <echo message=""/>
        <echo message="Run ant in the current directory.  If no target is specified,"/>
        <echo message="ant will build securityservices, jar and sign the jars.  Include"/>
        <echo message="'-v' with ant for verbose mode."/>
        <echo message=""/>
        <echo message="target:"/>
        <echo message="    all - build, jar and sign securityservices (default)."/>
        <echo message="    cvs-update - execute 'cvs update -d' in the current directory"/>
        <echo message="    with-update - execute the cvs-update and all targets"/>
        <echo message="    install - execute the all target, and install securityservices"/>
        <echo message="              signed jars and configuration files"/>
        <echo message="    javadocs - create javadocs for securityservices"/>
        <echo message="    tar-docs - tar and zip the javadocs"/>
        <echo message="    help - print out the usage message"/>
    </target>
        
</project>
<!-- End Ultra*Log/securityservices ant build script -->
