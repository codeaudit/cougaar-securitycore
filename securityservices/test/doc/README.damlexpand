How to make the daml expander work (someday):

1. Make sure that the line 
	org.cougaar.config.path=...
   in the $CIP/configs/security/Linux.props file includes 
      /mnt/shared/integ/configs/daml

2. Make sure that everything in the directory 
	UL/securityservices/test/configs/daml
   is in the directory 
	${CIP}/configs/daml

3. In the $CIP/configs/daml directory, run the command

      SecureNode EnclaveOnePolicyManagerNode


4. After the EnclaveOnePolicyManagerNode, run kpat in the
   ${CIP}/configs/daml directory.

5. When kpat brings up the "select authenticate scheme" popup, click on cancel.

6. Click on the Namespaces tab
	 + Click on Load Namespace...
	 + Click on http://ontology.coginst.uwf.edu/Ultralog/UltralogOntologies.daml
	 + Click on Load Selected Namespaces
   KPAT will go away for a while while it is loading things.

7. If you then click on the Actor Classes tab, you should see 

      http://ontology.coginst.uwf.edu/Ultralog/Names/ActorClasses.daml#AdminAssistant

   at the top of the list.  It may take a refresh to get here.

8. To load a (nonconditional) policy, first choose a subject for the
   policy (under the actor classes tab).  Then click on load under
   policy description.  To manually load the policies for the UseCases
   at a given threatcon, load all the policies with the
   UseCaseXThreatConY name.  For use case 1 and 3, Role 1 =
   CAAdministrator and Role 2 = AdminAssistant.  For use case 2, the
   only subject is the AG1 members.  We will see if I succeed in
   loading non-conditional policies which would save you this pain.






---->>Types of Files and Configuration Notes

1. In my directory ${CIP}/configs/daml, I have three .ini files:
      EnclaveOnePolicyManager.ini   EnclaveOnePolicyManagerNode.ini
      EnclaveOnePolicyManagerServlet.ini

   The one thing that I know about them is that the
   EnclaveOnePolicyManager.ini file has two lines that start the expanders:

   plugin =org.cougaar.core.security.policy.daml.DamlExpander
					(policy-highlevel.init,1,false)
    plugin =org.cougaar.core.security.policy.daml.DamlExpander
					(policy-lowlevel.init,2,true)

   The job of these expanders is to translate the policy one level.
   The integer (1 or 2 or...) says where the expander is in the
   sequence.  The true and false indicate whether the expander is
   first in the series. I run the node with the command

	 SecureNode EnclaveOnePolicyManagerNode.ini

2. The policy*.init files guide the canned expansion.  Each line
   consists of the name of a daml file followed by a list of files
   that the daml file should be expanded to.  This file is re-read
   every time that a new policy is seen by the expanders.  This means
   that the file can be dynamically modified if things go wrong.

3. The *.msg files are pre-built portions of the Use Case policies.
   Loading them into KPAT will give the use cases.

4. The *.cpmsg files are the pre-built Use Case policies expressed as
   conditional policies.

5. The *.daml files are daml files representing daml policies that we
   recognize and daml policies that the expander puts out.

6. The *.xml files are the policies that live at the very end of the
   expansion process.  These files go to the enforcers.

7. In the directory 
	  securityservices/src/org/cougaar/core/security/policy/daml
   I have three java files
	 DamlExpander.java 
	       This does the actual expansion.
	 DamlPolicyExpansion.java
	       ?
	 Forgetful.java
	       This massages the daml files that we get so that we can
	       read them and also test them for equality.

