This README file explains how to configure the security services. Either CSMART or
.INI configuration files may be used to configure the security services.


Node configuration
==================
Every node must have the following components:
* The KAoS guard component registers itself to the policy domain manager, and receives
  the security policies from the policy domain manager. The policies are then propagated
  to the policy enforcers running on that node. It must run on every node.
* The Security component factory component is responsible for initializing and registering
  the security services. It must run on every node.
  The security component factory takes one parameter, which must be set to the name of the
  security community in which the node agent is running.
* The JAAS agent binder component executes every agent in a separate user context.
  The component must run on every node.

Sample INI configuration
------------------------
Node.AgentManager.Agent.SecurityComponent(HIGH)=safe.util.SAFESecurityComponent
Node.AgentManager.Agent.SecurityComponent(HIGH)=org.cougaar.core.security.provider.SecurityComponentFactory(Enclave-2)
Node.AgentManager.Binder = org.cougaar.core.security.access.JaasAgentBinderFactory

Recipes
-------
KAoS guard:                    IHMCSecurityComponent.sql
Security component factory:    NAISecurityComponentFactory.sql
JAAS agent binder:             NAIJaasBinder.sql

User Management Agent
=====================
The user management agent is responsible for managing users.
1) Start by reading the README.userdb file.
2) Create a user admin agent. For instance, create the "UserAdminAgent" agent.
   The user admin agent can be created using an AgentInsertionRecipe recipe.
3) Add the UserAdminServlet to the user admin agent. This can be done by creating a SpecificInsertionRecipe recipe.

Sample INI configuration
------------------------
plugin = org.cougaar.core.security.certauthority.CaServletComponent(org.cougaar.core.security.crypto.ldap.admin.UserAdminServlet, /useradmin)

Recipes
-------
User admin agent:              UserAdminAgent.sql
User admin servlet:            UserAdminServlet.sql

Agent configuration
===================

Sample INI configuration
------------------------

Society Manager
===============

Sample INI configuration
------------------------

Enclave Manager
===============
Each enclave should have one enclave security manager agent.
Create one recipe for each enclave security manager agent. 

Sample INI configuration
------------------------


Monitoring & Response sensors
=============================
The following events may be generated:
1) Java security manager events
2) Jar file signature failures events
3) Login failure events
4) Message protection failure events

Events of type 1) and 2) are handled by the BootStrapEventPlugin plugin.
Events of type 3) are handled by the plugin.
Events of type 4) are handled by the plugin.
These plugins should be included in all node agents.

plugin = org.cougaar.core.security.monitoring.plugin.BootStrapEventPlugin
plugin = org.cougaar.core.security.monitoring.plugin.LoginFailureRatePlugin
org.cougaar.core.security.monitoring.plugin.UserLockoutPlugin

org.cougaar.core.adaptivity.AEViewerServlet

MnR-PlaybookManager.sql		   MnRAEViewerServlet-export.sql
MnRAdaptivityEngine-export.sql	   MnRConditionServiceProvider-export.sql
MnROperatingModePolicyManager-export.sql
MnROperatingModeServiceProvider-export.sql
MnRPlaybookManager-export.sql	   MobilityDomainAddition-export.sql
NAICapConsolidatePlugin-export.sql
NAICapProcessPlugin-export.sql	   NAIJaasBinder-export.sql
NAISecurityComponentFactoryAddition-export.sql
NAIcaAgent-export.sql		   NameServiceAgent-export.sql
README.TXT			   SafeUWFSecurityComponentAddition-export.sql
SecurityDomainAddition-export.sql  SocietySecurityMnRManager-export.sql
TelcordiaAdaptiveFilterPlugin-export.sql
TelcordiaTranslatorPluginEnclave1-export.sql
TelcordiaTranslatorPluginEnclave2-export.sql
TelcordiaTranslatorPluginEnclave3-export.sql
TelcordiaTranslatorPluginEnclave4-export.sql
UMRecipes.sql			   UserAdminAgent-export.sql
UserAdminServlet-export.sql	   loadRecipes.bat
recipelist			   recipesall.csh

Recipes
-------
BootStrap Event Plugin:        MnRBootStrapEventPlugin0
                               MnRBootStrapEventPlugin1
                               MnRBootStrapEventPlugin2
                               MnRBootStrapEventPlugin3
                               MnRBootStrapEventPlugin4
Login Failure sensor:          MnRLoginFailureRatePlugin

Certificate Authortity
======================

