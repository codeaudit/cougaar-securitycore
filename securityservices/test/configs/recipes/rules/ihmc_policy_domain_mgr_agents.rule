#!/usr/bin/ruby
####################################################
# ihmc_policy_domain_mgr_agents.rule
# Adds PolicyDomainManagers 

society.each_node do |node|
  node.each_facet(:role) do |facet|
    if facet[:role] == 'Management'
      facetval = node.host.get_facet(:enclave)
      enclave = facetval[0..0] + facetval[1..facetval.length].downcase 
      agentname = enclave + "PolicyDomainManager"
      
      node.add_agent(agentname) do |agent|
        agent.add_component do |c|
          c.classname = "safe.policyManager.DomainManagerPlugin"
          c.add_argument("domainName=" + enclave + "Domain")
          c.add_argument("useJTP=true")
          c.add_argument("ontologySet=ultralog")
        end
        agent.add_component do |c|
          c.classname = "safe.policyManager.ConditionMonitorPlugin"
        end
        agent.add_component do |c|
          c.classname = "safe.policyManager.SetOperatingModeServletComponent"
        end
        agent.add_component do |c|
          c.classname = "org.cougaar.core.adaptivity.OperatingModePolicyManager"
        end
        agent.add_component do |c|
          c.classname = "org.cougaar.core.adaptivity.OperatingModeServiceProvider"
        end
        agent.add_component do |c|
          c.classname = "org.cougaar.core.adaptivity.PlaybookManager"
          c.add_argument("dummyPlays.txt")
        end
        agent.add_component do |c|
          c.classname = "safe.policyManager.PolicyExpanderPlugin"
        end
      end
    end
  end
end
