#
# I am somewhat surprised that this file needs to be here but without
# it everything dies instantly.  I put the things or interest to me
# at the begining.
#
# I don't know where I found this file either...
#

#
# Basically identical to the standard TIC env rule, except:
#   - added default node classname
#   - reduced JVM stack size to (50M - 256M)
#

society.each_node do |node|

    if node.classname.nil?
      node.classname = 'org.cougaar.bootstrap.Bootstrapper'
    end

    node.add_prog_parameter("org.cougaar.core.node.Node") unless node.prog_parameters.include?("org.cougaar.core.node.Node")


#######################################################################
#
#  Put my overrides in here


#
#  Blackboard policy settings
#

  node.override_parameter("-Dorg.cougaar.core.security.policy.auth.role.useAccessCaching",
                          "true")
#  node.override_parameter("-Dorg.cougaar.core.security.access.efficientBBS",
#                          "false")


#
# persistence parameters
#

#  node.override_parameter("-Dorg.cougaar.core.persistence.lazyInterval",
#                          "25000")  
  node.override_parameter("-Dorg.cougaar.core.persistence.enable","true")
  node.override_parameter("-Dorg.cougaar.core.persistence.clear", "false")

#
# KAoS Settings
#

#  node.override_parameter("-Dkaos.ontology.repository.maxReasoningDepth",
#                          "150");


#
#Java Virtual Machine Parameters
#
  node.replace_parameter(/\-Xms/, "-Xms64m")
  node.replace_parameter(/\-Xmx/, "-Xmx512m")

  node.override_parameter("-Dorg.cougaar.planning.ldm.lps.ComplainingLP.level",
                          "0")


#
# shouldn't be necessary?
#

   node.override_parameter("-Dorg.cougaar.domain.mobility",
                           "org.cougaar.core.mobility.ldm.MobilityDomain")


#  End of my overrides.
#
#######################################################################

    node.override_parameter("-Dorg.cougaar.core.node.InitializationComponent","XML")
    
    node.override_parameter("-Dorg.cougaar.core.logging.config.filename","loggingConfig.conf")

    
    # Add start time/timezone if startTime parameter is not present
    start_time = nil
    node.each_parameter do |param|
      start_time = param if param =~ /agent\.startTime/
    end
    unless start_time
      node.add_parameter('-Dorg.cougaar.core.agent.startTime=07/11/2005')
      node.add_parameter('-Duser.timezone=GMT')
    end
    
    # Preferred log file name
    node.override_parameter("-Dorg.cougaar.core.logging.log4j.appender.SECURITY.File","$COUGAAR_INSTALL_PATH/workspace/log4jlogs/#{node.name}.log")
    
    # To run most societies, you need configs/common and configs/glmtrans
    # on the path. 
    node.override_parameter("-Dorg.cougaar.config.path","$COUGAAR_INSTALL_PATH/configs/common\\\;$COUGAAR_INSTALL_PATH/configs/glmtrans\\\;$COUGAAR_INSTALL_PATH/configs/CnCCalc\\\;")
    
    # ACME Service will replace $COUGAAR_INSTALL_PATH with platform specific path
    node.override_parameter("-Dorg.cougaar.install.path","$COUGAAR_INSTALL_PATH")
    node.override_parameter("-Dorg.cougaar.workspace","$COUGAAR_INSTALL_PATH/workspace")
    node.override_parameter("-Dorg.cougaar.system.path","$COUGAAR_INSTALL_PATH/sys")
    node.override_parameter("-Djava.class.path","$COUGAAR_INSTALL_PATH/lib/bootstrap.jar")
    node.replace_parameter(/\-Xbootclasspath/, "-Xbootclasspath/p:$COUGAAR_INSTALL_PATH/lib/javaiopatch.jar")


end
