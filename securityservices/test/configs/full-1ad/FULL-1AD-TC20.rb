Cougaar::Model::Society.new('ACME-UL-SOCIETY') do |society|
  society.add_host('localhost') do |host|
    host.add_node('FULL_1AD') do |node|
      node.classname = 'org.cougaar.bootstrap.Bootstrapper'
      node.add_parameter('-Dorg.cougaar.node.name=FULL_1AD')
      node.agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
        c.classname = 'org.cougaar.community.CommunityPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.mobility.service.RootMobilityPlugin()') do |c|
        c.classname = 'org.cougaar.core.mobility.service.RootMobilityPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.mts.std.StatisticsPlugin') do |c|
        c.classname = 'org.cougaar.mts.std.StatisticsPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.thread.TopPlugin') do |c|
        c.classname = 'org.cougaar.core.thread.TopPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.thread.AgentLoadRatePlugin') do |c|
        c.classname = 'org.cougaar.core.thread.AgentLoadRatePlugin'
        c.priority = 'LOW'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.qos.metrics.AgentStatusRatePlugin') do |c|
        c.classname = 'org.cougaar.core.qos.metrics.AgentStatusRatePlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.qos.metrics.MetricsServletPlugin') do |c|
        c.classname = 'org.cougaar.core.qos.metrics.MetricsServletPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.thread.AgentLoadSensorPlugin') do |c|
        c.classname = 'org.cougaar.core.thread.AgentLoadSensorPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.core.qos.gossip.GossipStatisticsPlugin') do |c|
        c.classname = 'org.cougaar.core.qos.gossip.GossipStatisticsPlugin'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
      end
      node.agent.add_component('org.cougaar.mts.std.DeliveryVerificationAspect(info-time=9,warn-time=99)') do |c|
        c.classname = 'org.cougaar.mts.std.DeliveryVerificationAspect'
        c.priority = 'COMPONENT'
        c.order = 220
        c.insertionpoint = 'Node.AgentManager.Agent.MessageTransport.Aspect'
        c.add_argument('info-time=9')
        c.add_argument('warn-time=99')
      end
      node.agent.add_component('org.cougaar.core.qos.gossip.GossipAspect()') do |c|
        c.classname = 'org.cougaar.core.qos.gossip.GossipAspect'
        c.priority = 'COMPONENT'
        c.order = 230
        c.insertionpoint = 'Node.AgentManager.Agent.MessageTransport.Aspect'
      end
      node.agent.add_component('org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect()') do |c|
        c.classname = 'org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect'
        c.priority = 'COMPONENT'
        c.order = 240
        c.insertionpoint = 'Node.AgentManager.Agent.MessageTransport.Aspect'
      end
      node.agent.add_component('org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent()') do |c|
        c.classname = 'org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent'
        c.priority = 'COMPONENT'
        c.order = 250
        c.insertionpoint = 'Node.AgentManager.Agent.MessageTransport.Aspect'
      end
      node.agent.add_component('org.cougaar.core.qos.rss.AgentHostUpdaterComponent()') do |c|
        c.classname = 'org.cougaar.core.qos.rss.AgentHostUpdaterComponent'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.MetricsServices.Component'
      end
      node.agent.add_component('org.cougaar.lib.mquo.SyscondFactory()') do |c|
        c.classname = 'org.cougaar.lib.mquo.SyscondFactory'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.MetricsServices.Component'
      end
      node.agent.add_component('org.cougaar.core.qos.gossip.GossipFeedComponent()') do |c|
        c.classname = 'org.cougaar.core.qos.gossip.GossipFeedComponent'
        c.priority = 'COMPONENT'
        c.insertionpoint = 'Node.AgentManager.Agent.MetricsServices.Component'
      end
      node.add_agent('1-1-CAVSQDN.AVNBDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-1-CAVSQDN.AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-1-CAVSQDN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ANYF'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAETAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='SQUADRON'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-13-ARBN.3-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-13-ARBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-13-ARBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAFZAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-27-FABN.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-27-FABN.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-27-FABN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='41-FABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ASYB'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAKRAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-35-ARBN.2-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-35-ARBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-35-ARBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPYAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-36-INFBN.1-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-36-INFBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-36-INFBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='TZUX'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAE3AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-37-ARBN.1-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-37-ARBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-37-ARBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HBBH'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH54AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-4-ADABN.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-4-ADABN.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-4-ADABN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YEMX'
        end
        agent.add_facet do |facet|
          facet[:uic]='WGM8AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-41-INFBN.3-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-41-INFBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-41-INFBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAHSAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-501-AVNBN.AVNBDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-501-AVNBN.AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-501-AVNBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='GSYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAFDAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-6-INFBN.2-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-6-INFBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-6-INFBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPSAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-94-FABN.DIVARTY.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-94-FABN.DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-94-FABN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAF7AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ULRK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPBAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DIVISION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:mechanism]='PassThrough'
          facet[:role]='StrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('1-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-BDE-1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-37-ARBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-36-INFBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-37-ARBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='16-ENGBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-3-FABN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='501-FSB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='TZUX'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAELAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('102-POL-SUPPLYCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='102-POL-SUPPLYCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='102-POL-SUPPLYCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WELQAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('106-TCBN.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='106-TCBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='106-TCBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='594-MDM-TRKCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='372-CGO-TRANSCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='15-PLS-TRKCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='238-POL-TRKCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCKVAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='FuelTransportProvider'
          facet[:note]='Not Used Now'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='MaterielTransportProvider'
          facet[:note]='Not Used Now'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('109-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='109-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='109-MDM-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='28-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ECST'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH38AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('11-AVN-RGT.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='11-AVN-RGT.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='11-AVN-RGT'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='WJPV'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAAFAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='REGIMENT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('110-POL-SUPPLYCO.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='110-POL-SUPPLYCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='110-POL-SUPPLYCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='6-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LEXG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WELKAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-THEATER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-THEATER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-THEATER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-THEATER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('12-AVNBDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='12-AVNBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='12-AVNBDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YRBU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCYPAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('123-MSB-FOOD.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='123-MSB-FOOD.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='123-MSB-FOOD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='123-MSB-HQ.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WMSBAE'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:mechanism]='MSB'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(MaintainInventory)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MaintainInventory')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(INVENTORY_FILE=MSB_subsistence.inv,SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('INVENTORY_FILE=MSB_subsistence.inv')
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('123-MSB-HQ.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='123-MSB-HQ.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='123-MSB-HQ'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='123-MSB-POL.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='123-MSB-ORD.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='123-MSB-PARTS.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='123-MSB-FOOD.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDJ0A0'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='DIVISION'
          facet[:sca_supported_org]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='BRIGADE'
          facet[:sca_supported_org]='DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('123-MSB-ORD.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='123-MSB-ORD.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='123-MSB-ORD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='123-MSB-HQ.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WMSBAC'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:mechanism]='MSB'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(MaintainInventory)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MaintainInventory')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(INVENTORY_FILE=123-MSB_ammunition.inv,SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('INVENTORY_FILE=123-MSB_ammunition.inv')
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-DIVISION-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('123-MSB-PARTS.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='123-MSB-PARTS.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='123-MSB-PARTS'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='123-MSB-HQ.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WMSBAD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:mechanism]='MSB'
          facet[:role]='SparePartsProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(SparePartsProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SparePartsProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(MaintainInventory)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MaintainInventory')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(INVENTORY_FILE=MSB_consumable.inv,SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('INVENTORY_FILE=MSB_consumable.inv')
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('123-MSB-POL.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='123-MSB-POL.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='123-MSB-POL'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='123-MSB-HQ.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WMSBAB'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:mechanism]='MSB'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:mechanism]='MSB'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(FuelSupplyProvider,PackagedPOLSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(MaintainInventory)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MaintainInventory')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(INVENTORY_FILE=MSB_bulkpol.inv,SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('INVENTORY_FILE=MSB_bulkpol.inv')
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(INVENTORY_FILE=MSB_packagedpol.inv,SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('INVENTORY_FILE=MSB_packagedpol.inv')
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('125-FSB.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='125-FSB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='125-FSB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WJA0AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SparePartsProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='BRIGADE'
          facet[:sca_supported_org]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('125-ORDBN.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='125-ORDBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='125-ORDBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='452-ORDCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='529-ORDCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='BQKY'
        end
        agent.add_facet do |facet|
          facet[:uic]='WQ91AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CORPS-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CORPS-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('127-DASB.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='127-DASB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='127-DASB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='KBFP'
        end
        agent.add_facet do |facet|
          facet[:uic]='WJEQAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SparePartsProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='BRIGADE'
          facet[:sca_supported_org]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('130-ENGBDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='130-ENGBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='130-ENGBDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='52-ENGBN-CBTHVY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='244-ENGBN-CBTHVY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='TGTK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WHDLAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('141-SIGBN.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='141-SIGBN.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='141-SIGBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ULRK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPEAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('15-PLS-TRKCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='15-PLS-TRKCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='15-PLS-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='106-TCBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKNN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCNPAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='16-CSG'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='106-TCBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LGKU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WC9GAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='DIVISION'
          facet[:sca_supported_org]='16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('16-ENGBN.1-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='16-ENGBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='16-ENGBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HWZJ'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAEUAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='18-MAINTBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='77-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='226-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='263-FLDSVC-CO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='227-SUPPLYCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LGKU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB0MAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('18-MPBDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='18-MPBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='18-MPBDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ECST'
        end
        agent.add_facet do |facet|
          facet[:uic]='WFPEAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('18-PERISH-SUBPLT.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='18-PERISH-SUBPLT.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='18-PERISH-SUBPLT'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HCTL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDNZAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='PLATOON'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('181-TCBN.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='181-TCBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='181-TCBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='377-HVY-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='41-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='51-MDM-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='XJN1'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCKXAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='MaterielTransportProvider'
          facet[:note]='Not Used Now'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('19-MMC.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='19-MMC.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='19-MMC'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YXUR'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH3FAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='191-ORDBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='23-ORDCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='702-EODDET.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='720-EODDET.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='24-ORDCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='QEYP'
        end
        agent.add_facet do |facet|
          facet[:uic]='WFMVAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-THEATER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-THEATER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-3-FABN.1-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-3-FABN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-3-FABN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HWZJ'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAEQAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-37-ARBN.1-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-37-ARBN.1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-37-ARBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='TZUX'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAD9AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-4-FABN-MLRS.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-4-FABN-MLRS.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-4-FABN-MLRS'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='41-FABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKNN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH1SAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-501-AVNBN.AVNBDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-501-AVNBN.AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-501-AVNBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='GSYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDUVAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-6-INFBN.2-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-6-INFBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-6-INFBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPWAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-70-ARBN.3-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-70-ARBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-70-ARBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAZBAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('2-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='2-BDE-1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-6-INFBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-6-INFBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-35-ARBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='40-ENGBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='4-27-FABN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='47-FSB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPGAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('200-MMC.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='200-MMC.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='200-MMC'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='CYWK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WNBPAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='SparePartsProvider'
          facet[:note]='Add'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('205-MIBDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='205-MIBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='205-MIBDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YXVX'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH8HAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('208-SCCO.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='208-SCCO.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='208-SCCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HCRL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCF0AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('21-TSC-HQ.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='21-TSC-HQ'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='USAEUR.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AWR-2.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='200-MMC.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='RSA.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='7-TCGP-TPTDD.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='CYWK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WNBSAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DIVISION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:mechanism]='PassThrough'
          facet[:role]='StrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='THEATER'
          facet[:sca_supported_org]='USAEUR.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('22-SIGBDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='22-SIGBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='22-SIGBDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='EARZ'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCDWAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('226-MAINTCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='226-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='226-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKNN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WD4PAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='SparePartsProvider'
          facet[:note]='Add'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('227-SUPPLYCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='227-SUPPLYCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='227-SUPPLYCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WEVGAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('23-ORDCO.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='23-ORDCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='23-ORDCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='QEYP'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB3TAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('238-POL-TRKCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='238-POL-TRKCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='238-POL-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='106-TCBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='GBGV'
        end
        agent.add_facet do |facet|
          facet[:uic]='WS1AAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('24-ORDCO.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='24-ORDCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='24-ORDCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LEXG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDHJAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('240-SSCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='240-SSCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='240-SSCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YKLA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WE7PAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='FuelSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='PackagedPOLSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='SubsistenceSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('244-ENGBN-CBTHVY.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='244-ENGBN-CBTHVY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='244-ENGBN-CBTHVY'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='130-ENGBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='FEQM'
        end
        agent.add_facet do |facet|
          facet[:uic]='WS5DAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('25-FABTRY-TGTACQ.DIVARTY.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='25-FABTRY-TGTACQ.DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='25-FABTRY-TGTACQ'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AZEH'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH5QAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTERY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('26-SSCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='26-SSCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='26-SSCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LGKU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH1LAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='FuelSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='PackagedPOLSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='SubsistenceSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('263-FLDSVC-CO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='263-FLDSVC-CO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='263-FLDSVC-CO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HCRL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WQ1FAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('27-TCBN-MVTCTRL.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='27-TCBN-MVTCTRL.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='27-TCBN-MVTCTRL'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YRBU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCPPAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('28-TCBN.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='28-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='28-TCBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='66-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='68-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='109-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ECST'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCKNAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:role]='MaterielTransportProvider'
          facet[:note]='Not Used Now'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('286-ADA-SCCO.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='286-ADA-SCCO.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='286-ADA-SCCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='69-ADABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HCRL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAYRAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='29-SPTGP'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LXQD'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCAYAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('3-13-FABN-155.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='3-13-FABN-155.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='3-13-FABN-155'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='41-FABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKNN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WG1DAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('3-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='3-BDE-1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-13-ARBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-41-INFBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-70-ARBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='70-ENGBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='4-1-FABN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='125-FSB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAHEAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('3-SUPCOM-HQ.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='3-SUPCOM-HQ'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='208-SCCO.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='27-TCBN-MVTCTRL.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='19-MMC.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YRBU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WBG0AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DIVISION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:mechanism]='PassThrough'
          facet[:role]='StrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('30-MEDBDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='30-MEDBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='30-MEDBDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='KKLE'
        end
        agent.add_facet do |facet|
          facet[:uic]='WBG7AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('316-POL-SUPPLYBN.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='316-POL-SUPPLYBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='316-POL-SUPPLYBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='900-POL-SUPPLYCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='515-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='XJN1'
        end
        agent.add_facet do |facet|
          facet[:uic]='WSRPAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='FuelTransportProvider'
          facet[:note]='Not Used Now'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('317-MAINTCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='317-MAINTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='317-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YKLA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WET9AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('343-SUPPLYCO.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='343-SUPPLYCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='343-SUPPLYCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='UJGP'
        end
        agent.add_facet do |facet|
          facet[:uic]='WSS7AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-THEATER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-THEATER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='37-TRANSGP'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='28-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='6-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='MJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCJZAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('372-CGO-TRANSCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='372-CGO-TRANSCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='372-CGO-TRANSCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='106-TCBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WFSRAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('377-HVY-TRKCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='377-HVY-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='377-HVY-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='181-TCBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='FRBC'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCMBAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('4-1-FABN.3-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='4-1-FABN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='4-1-FABN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH9UAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('4-27-FABN.2-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='4-27-FABN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='4-27-FABN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH28AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('40-ENGBN.2-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='40-ENGBN.2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='40-ENGBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='WJUE'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDKXAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('406-SUPPLYCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='406-SUPPLYCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='406-SUPPLYCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='561-SSBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HCTL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WEVHAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='SubsistenceSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('41-FABDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='41-FABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='41-FABDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-ARTY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-4-FABN-MLRS.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-27-FABN.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='3-13-FABN-155.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ASYB'
        end
        agent.add_facet do |facet|
          facet[:uic]='WA00AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('41-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='41-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='41-POL-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='181-TCBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VXWV'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCMPAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('416-POL-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='416-POL-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='416-POL-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='6-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LEXG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WNCNAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('452-ORDCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='452-ORDCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='452-ORDCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='125-ORDBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AAKM'
        end
        agent.add_facet do |facet|
          facet[:uic]='WQ56AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('47-FSB.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='47-FSB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='47-FSB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH98AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SparePartsProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='BRIGADE'
          facet[:sca_supported_org]='2-BDE.1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('485-CSB.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='485-CSB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='102-POL-SUPPLYCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='596-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='26-SSCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='588-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='592-ORDCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LGKU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB0UAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='5-CORPS'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='USAEUR.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='CORPS-ARTY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='CYWK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAT6AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='CORPS'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('5-MAINTCO.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='5-MAINTCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='5-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='UDKL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB1XAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('501-FSB.DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='501-FSB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='501-FSB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='TZUX'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH96AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SparePartsProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='BRIGADE'
          facet[:role]='SubsistenceSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='BRIGADE'
          facet[:sca_supported_org]='1-BDE.1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-BRIGADE-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('501-MIBN-CEWI.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='501-MIBN-CEWI.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='501-MIBN-CEWI'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH6YAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('501-MPCO.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='501-MPCO.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='501-MPCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ULRK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPCAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='51-MAINTBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='512-MAINTCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='574-SSCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='5-MAINTCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='343-SUPPLYCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='18-PERISH-SUBPLT.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VYZR'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB0HAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('51-MDM-TRKCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='51-MDM-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='51-MDM-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='181-TCBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='XJN1'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCNTAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('512-MAINTCO.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='512-MAINTCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='512-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VYZR'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB38AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('515-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='515-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='515-POL-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='316-POL-SUPPLYBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='XJN1'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCNBAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('52-ENGBN-CBTHVY.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='52-ENGBN-CBTHVY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='52-ENGBN-CBTHVY'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='130-ENGBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDDL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WNAHAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='ConstructionProvider'
          facet[:note]='Remove'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('529-ORDCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='529-ORDCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='529-ORDCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='125-ORDBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VXWV'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB5KAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('541-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='541-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='541-POL-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='561-SSBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCNDAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('561-SSBN.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='561-SSBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='561-SSBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='541-POL-TRKCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='584-MAINTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='406-SUPPLYCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDEEAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('565-RPRPTCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='565-RPRPTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='565-RPRPTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HFTZ'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDWTAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='SparePartsProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('574-SSCO.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='574-SSCO.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='574-SSCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='51-MAINTBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VYZR'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDCQAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='FuelSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='PackagedPOLSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='SubsistenceSupplyProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='DIVISION'
          facet[:sca_supported_org]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('584-MAINTCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='584-MAINTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='584-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='561-SSBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WEYBAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('588-MAINTCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='588-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='588-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKNN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WD4MAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('592-ORDCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='592-ORDCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='592-ORDCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='BQKY'
        end
        agent.add_facet do |facet|
          facet[:uic]='WQ92AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='AmmunitionProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='1-AD.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CORPS-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CORPS-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('594-MDM-TRKCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='594-MDM-TRKCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='594-MDM-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='106-TCBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HDBL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCPGAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('596-MAINTCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='596-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='596-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='485-CSB.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='MBME'
        end
        agent.add_facet do |facet|
          facet[:uic]='WE7LAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('597-MAINTCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='597-MAINTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='597-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HFTZ'
        end
        agent.add_facet do |facet|
          facet[:uic]='WHLMAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='SparePartsProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('6-TCBN.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='6-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='6-TCBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='416-POL-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='110-POL-SUPPLYCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='632-MAINTCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HERT'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCKKAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='THEATER'
          facet[:role]='FuelTransportProvider'
          facet[:note]='Not Used Now'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('632-MAINTCO.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='632-MAINTCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='632-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='6-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKUZ'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB40AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='DIVISION'
          facet[:role]='SparePartsProvider'
          facet[:note]='Add'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='DIVISION'
          facet[:sca_supported_org]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-DIVISION-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('66-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='66-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='66-MDM-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='28-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='MJPG'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCNXAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('68-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='68-MDM-TRKCO.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='68-MDM-TRKCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='28-TCBN.37-TRANSGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ECST'
        end
        agent.add_facet do |facet|
          facet[:uic]='WCNZAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('69-ADABDE.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='69-ADABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='69-ADABDE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='286-ADA-SCCO.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HWX3'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAVNAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('69-CHEMCO.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='69-CHEMCO.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='69-CHEMCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ANYF'
        end
        agent.add_facet do |facet|
          facet[:uic]='WA8RAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='7-CSG'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-SUPCOM-HQ.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='561-SSBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='181-TCBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='316-POL-SUPPLYBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='125-ORDBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='AVFD'
        end
        agent.add_facet do |facet|
          facet[:uic]='WH7MAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='DIVISION'
          facet[:sca_supported_org]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('7-TCGP-TPTDD.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='7-TCGP-TPTDD.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='7-TCGP-TPTDD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HERT'
        end
        agent.add_facet do |facet|
          facet[:uic]='WD1HAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('70-ENGBN.3-BDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='70-ENGBN.3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='70-ENGBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='3-BDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HKBN'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAZ8AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('702-EODDET.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='702-EODDET.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='702-EODDET'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='FRBC'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB54Y1'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DETACHMENT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='71-MAINTBN'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='240-SSCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='317-MAINTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='597-MAINTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='565-RPRPTCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='71-ORDCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YKLA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB0RAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BATTALION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('71-ORDCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='71-ORDCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='71-ORDCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='71-MAINTBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='LGKU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WET5AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('720-EODDET.29-SPTGP.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='720-EODDET.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='720-EODDET'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='191-ORDBN.29-SPTGP.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='FRBC'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB6CRD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DETACHMENT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('77-MAINTCO.16-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='77-MAINTCO.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='77-MAINTCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='18-MAINTBN.16-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ASYB'
        end
        agent.add_facet do |facet|
          facet[:uic]='WB35AA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('900-POL-SUPPLYCO.7-CSG.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='900-POL-SUPPLYCO.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='900-POL-SUPPLYCO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='316-POL-SUPPLYBN.7-CSG.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='HCRL'
        end
        agent.add_facet do |facet|
          facet[:uic]='WSTMAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='COMPANY'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CORPS-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CORPS-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AVNBDE.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AVNBDE-1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='127-DASB.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-1-CAVSQDN.AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-501-AVNBN.AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='2-501-AVNBN.AVNBDE.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='GSYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WDJUAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CBT'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Brigade'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AWR-2.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AWR-2.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AWR-2'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='AmmunitionProvider'
          facet[:note]='C .lt. 30'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='SparePartsProvider'
          facet[:note]='C .lt. 30'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='SubsistenceSupplyProvider'
          facet[:note]='C .lt. 30'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='JOINT'
          facet[:sca_supported_org]='OSD.GOV'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin(ProjectSupply,Supply)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ProjectSupply')
          c.add_argument('Supply')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AmmoConusGround.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AmmoConusGround.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AmmoConusGround'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AmmoSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Ammo'
          facet[:role]='ToPOEGroundTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=AmmoConusGroundVehicles.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=AmmoConusGroundVehicles.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundVishnuPlugin(envFile=ConusEuroGround.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=ConusEuroGround.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AmmoSea.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AmmoSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AmmoSea'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AmmoTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AmmoShipPacker.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AmmoConusGround.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AmmoTheaterGround.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Ammo'
          facet[:role]='SeaTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(FromPODGroundTransportationProvider,ShipPackingTransportationProvider,ToPOEGroundTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('FromPODGroundTransportationProvider')
          c.add_argument('ShipPackingTransportationProvider')
          c.add_argument('ToPOEGroundTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalSeaPorts.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalSeaPorts.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SequentialGlobalSeaPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SequentialGlobalSeaPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AmmoShipPacker.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AmmoShipPacker.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AmmoShipPacker'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AmmoSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Ammo'
          facet[:role]='ShipPackingTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=AmmoShips.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=AmmoShips.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SeaVishnuPlugin(envFile=ShipPacker.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SeaVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=ShipPacker.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SeaTransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SeaTransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AmmoTRANSCOM.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AmmoTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AmmoTRANSCOM'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='TRANSCOM-20.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AmmoSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='ModeSelector'
          facet[:role]='AmmoStrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='AmmoTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(SeaTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SeaTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GLMT.TRANSCOM.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GLMT.TRANSCOM.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin(envFile=GLMT.TRANSCOM.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.TRANSCOM.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin(envFile=GLMT.TRANSCOM.env.xml,doesNotNeedAirTransportProvider=true)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.TRANSCOM.env.xml')
          c.add_argument('doesNotNeedAirTransportProvider=true')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('AmmoTheaterGround.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='AmmoTheaterGround.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='AmmoTheaterGround'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='AmmoSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Ammo'
          facet[:role]='FromPODGroundTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=AmmoTheaterGroundVehicles.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=AmmoTheaterGroundVehicles.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundVishnuPlugin(envFile=TheaterGround.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=TheaterGround.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('CORPS-ARTY.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='CORPS-ARTY.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='5-CORPS-ARTY'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='41-FABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='YRBU'
        end
        agent.add_facet do |facet|
          facet[:uic]='WA0TAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DIVISION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:mechanism]='PassThrough'
          facet[:role]='StrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='CORPS-ARTY.5-CORPS.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('CORPS-REAR.5-CORPS.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='5-CORPS-REAR'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='11-AVN-RGT.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='12-AVNBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='130-ENGBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='69-ADABDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='18-MPBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='205-MIBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='30-MEDBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='22-SIGBDE.5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='CYWK'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='DIVISION'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Corps'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='CORPS'
          facet[:mechanism]='PassThrough'
          facet[:role]='StrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='CORPS'
          facet[:sca_supported_org]='CORPS-REAR.5-CORPS.ARMY.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(StrategicTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('StrategicTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('ConusAir.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='ConusAir.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='ConusAir'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='PlanePackerA.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='PlanePackerB.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Conus'
          facet[:role]='AirTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(FromPODGroundTransportationProvider:2,OrganicAirTransportationProvider:2,ToPOEGroundTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('FromPODGroundTransportationProvider:2')
          c.add_argument('OrganicAirTransportationProvider:2')
          c.add_argument('ToPOEGroundTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalAirPorts.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalAirPorts.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SequentialGlobalAirPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SequentialGlobalAirPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('ConusGroundA.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='ConusGroundA.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='ConusGroundA'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Conus'
          facet[:role]='ToPOEGroundTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=ConusGroundVehicles.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=ConusGroundVehicles.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundVishnuPlugin(envFile=ConusEuroGround.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=ConusEuroGround.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('ConusSea.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='ConusSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='ConusSea'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='ConusShipPacker.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='ConusGroundA.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='TheaterGroundA.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='TheaterGroundB.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Conus'
          facet[:role]='SeaTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(FromPODGroundTransportationProvider:2,ShipPackingTransportationProvider,ToPOEGroundTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('FromPODGroundTransportationProvider:2')
          c.add_argument('ShipPackingTransportationProvider')
          c.add_argument('ToPOEGroundTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalSeaPorts.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalSeaPorts.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SequentialGlobalSeaPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SequentialGlobalSeaPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('ConusShipPacker.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='ConusShipPacker.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='ConusShipPacker'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Conus'
          facet[:role]='ShipPackingTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=ConusShips.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=ConusShips.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SeaVishnuPlugin(envFile=ShipPacker.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SeaVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=ShipPacker.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SeaTransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SeaTransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('ConusTRANSCOM.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='ConusTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='ConusTRANSCOM'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='TRANSCOM-20.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='ConusAir.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='ConusSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='ModeSelector'
          facet[:role]='ConusStrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='ConusTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AirTransportationProvider,SeaTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AirTransportationProvider')
          c.add_argument('SeaTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GLMT.TRANSCOM.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GLMT.TRANSCOM.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin(envFile=GLMT.TRANSCOM.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.TRANSCOM.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin(envFile=GLMT.TRANSCOM.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.TRANSCOM.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('DISCOM.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='DISCOM-1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='123-MSB-HQ.DISCOM.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ULRK'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPLAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('DIV-REAR.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='DIV-REAR.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='1-AD-DIV'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='501-MPCO.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='141-SIGBN.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-4-ADABN.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='501-MIBN-CEWI.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='69-CHEMCO.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='ULRK'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('DIVARTY.1-AD.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='DIVARTY-1-AD'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='25-FABTRY-TGTACQ.DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='1-94-FABN.DIVARTY.1-AD.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VTYA'
        end
        agent.add_facet do |facet|
          facet[:uic]='WAPKAA'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='BRIGADE'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Division'
        end
        agent.add_facet do |facet|
          facet[:is_deployable]='T'
        end
        agent.add_facet do |facet|
          facet[:has_physical_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_equipment_assets]='T'
        end
        agent.add_facet do |facet|
          facet[:has_personnel_assets]='T'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmunitionProvider,FuelSupplyProvider,PackagedPOLSupplyProvider,SparePartsProvider,StrategicTransportationProvider,SubsistenceSupplyProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmunitionProvider')
          c.add_argument('FuelSupplyProvider')
          c.add_argument('PackagedPOLSupplyProvider')
          c.add_argument('SparePartsProvider')
          c.add_argument('StrategicTransportationProvider')
          c.add_argument('SubsistenceSupplyProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIConsumerPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider(subsistence.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.ClassIPartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('subsistence.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.MEIPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('MEI.q')
          c.add_argument('-PrototypeProvider')
        end
        agent.add_component('org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)') do |c|
          c.classname = 'org.cougaar.logistics.ldm.PartsPrototypeProvider'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Parts.q')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin(Ammunition,PackagedPOL,Consumable,BulkPOL,Subsistence,MaintainInventory,StrategicTransportation)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('Ammunition')
          c.add_argument('PackagedPOL')
          c.add_argument('Consumable')
          c.add_argument('BulkPOL')
          c.add_argument('Subsistence')
          c.add_argument('MaintainInventory')
          c.add_argument('StrategicTransportation')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin(OriginFile=None)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.strattrans.StrategicTransportProjectorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('OriginFile=None')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Ammunition,SUPPLY_PG_CLASS=AmmoConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('SUPPLY_PG_CLASS=AmmoConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=BulkPOL,SUPPLY_PG_CLASS=FuelConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('SUPPLY_PG_CLASS=FuelConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=PackagedPOL,SUPPLY_PG_CLASS=PackagedPOLConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('SUPPLY_PG_CLASS=PackagedPOLConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Consumable,SUPPLY_PG_CLASS=RepairPartConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('SUPPLY_PG_CLASS=RepairPartConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandForecastPlugin(SUPPLY_TYPE=Subsistence,SUPPLY_PG_CLASS=SubsistenceConsumerPG)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandForecastPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('SUPPLY_PG_CLASS=SubsistenceConsumerPG')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=BulkPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=PackagedPOL,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Consumable,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Ammunition,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin(SUPPLY_TYPE=Subsistence,GENERATE_PERIOD=86400000,STEP_PERIOD=86400000)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.demand.DemandGeneratorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
          c.add_argument('GENERATE_PERIOD=86400000')
          c.add_argument('STEP_PERIOD=86400000')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=BulkPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=BulkPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=PackagedPOL)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=PackagedPOL')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Consumable)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Consumable')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.InventoryPlugin(SUPPLY_TYPE=Subsistence)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.InventoryPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Subsistence')
        end
        agent.add_component('org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.inventory.LogisticsOPlanPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.LDMSQLPlugin(fdm_equipment.q)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.LDMSQLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('fdm_equipment.q')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('DLAHQ.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='DLAHQ.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='DLAHQ'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='ConstructionSupplyProvider'
          facet[:note]='Remove'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='SparePartsProvider'
          facet[:note]='C .gt. 30'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='SubsistenceSupplyProvider'
          facet[:note]='C .gt. 30'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='JOINT'
          facet[:sca_supported_org]='OSD.GOV'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin(ProjectSupply,Supply)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ProjectSupply')
          c.add_argument('Supply')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('EuroAir.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='EuroAir.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='EuroAir'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Euro'
          facet[:role]='AirTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(FromPODGroundTransportationProvider:2,OrganicAirTransportationProvider:2,ToPOEGroundTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('FromPODGroundTransportationProvider:2')
          c.add_argument('OrganicAirTransportationProvider:2')
          c.add_argument('ToPOEGroundTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalAirPorts.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalAirPorts.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SequentialGlobalAirPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SequentialGlobalAirPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('EuroGround.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='EuroGround.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='EuroGround'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='EuroSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Euro'
          facet[:role]='ToPOEGroundTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=EuroGroundVehicles.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=EuroGroundVehicles.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundVishnuPlugin(envFile=ConusEuroGround.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=ConusEuroGround.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('EuroSea.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='EuroSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='EuroSea'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='EuroShipPacker.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='EuroGround.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Euro'
          facet[:role]='SeaTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(FromPODGroundTransportationProvider:2,ShipPackingTransportationProvider,ToPOEGroundTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('FromPODGroundTransportationProvider:2')
          c.add_argument('ShipPackingTransportationProvider')
          c.add_argument('ToPOEGroundTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalSeaPorts.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalSeaPorts.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SequentialGlobalSeaPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SequentialGlobalSeaPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('EuroShipPacker.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='EuroShipPacker.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='EuroShipPacker'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='EuroSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='Euro'
          facet[:role]='ShipPackingTransportationProvider'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=EuroShips.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=EuroShips.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SeaVishnuPlugin(envFile=ShipPacker.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SeaVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=ShipPacker.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.SeaTransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.SeaTransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('EuroTRANSCOM.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='EuroTRANSCOM'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='TRANSCOM-20.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='EuroSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='EuroAir.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='ModeSelector'
          facet[:role]='EuroStrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(2)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('2')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AirTransportationProvider,SeaTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AirTransportationProvider')
          c.add_argument('SeaTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GLMT.TRANSCOM.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GLMT.TRANSCOM.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin(envFile=GLMT.TRANSCOM.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.TRANSCOM.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin(envFile=GLMT.TRANSCOM.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.TRANSCOM.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('FORSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='FORSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='FORSCOM'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('HNS.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='HNS.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='HNS'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='FuelSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalInventoryManager'
          facet[:role]='PackagedPOLSupplyProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='JOINT'
          facet[:sca_supported_org]='OSD.GOV'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin(ProjectSupply,Supply)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ProjectSupply')
          c.add_argument('Supply')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('JSRCMDSE.NATO.GOV') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='JSRCMDSE.NATO.GOV'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='JSRCMDSE'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='NATO.GOV'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('NATO.GOV') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='NATO.GOV'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='NATO'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='JSRCMDSE.NATO.GOV'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('OSC.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='OSC.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='OSC'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TerminalAmmunitionPacker'
          facet[:role]='AmmunitionProvider'
          facet[:note]='C .gt. 30'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='JOINT'
          facet[:sca_supported_org]='OSD.GOV'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(StrategicTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('StrategicTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.AmmoLowFidelityExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.AmmoLowFidelityExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.packer.ALAmmoPacker()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.packer.ALAmmoPacker'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.AmmoProjectionExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.AmmoProjectionExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.Level2TranslatorPlugin(SUPPLY_TYPE=Ammunition)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.Level2TranslatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('SUPPLY_TYPE=Ammunition')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(IOC_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('IOC_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-JOINT-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-JOINT-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('OSD.GOV') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='NCA'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]=''
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='TRANSCOM-20.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='FORSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='HNS.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='DLAHQ.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='OSC.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='NATO.GOV'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='USEUCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:role]='LogisticsCommanderInChief'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:role]='OperationalCommanderInChief'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.planning.plugin.completion.SimpleTimeAdvanceComponent(DEAD_NODE_TIMEOUT=180000,NORMAL_TIME_ADVANCE_DELAY=300000)') do |c|
          c.classname = 'org.cougaar.planning.plugin.completion.SimpleTimeAdvanceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('DEAD_NODE_TIMEOUT=180000')
          c.add_argument('NORMAL_TIME_ADVANCE_DELAY=300000')
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPServer()') do |c|
          c.classname = 'org.cougaar.yp.YPServer'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.util.yp.PublishTaxonomy()') do |c|
          c.classname = 'org.cougaar.servicediscovery.util.yp.PublishTaxonomy'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSInitServlet(093FF)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSInitServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('093FF')
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('PlanePackerA.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='PlanePackerA.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='PlanePackerA'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusAir.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='GlobalHalf'
          facet[:role]='OrganicAirTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalPlanesHalf.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalPlanesHalf.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GenericVishnuPlugin(envFile=PlanePacker.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GenericVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=PlanePacker.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('PlanePackerB.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='PlanePackerB.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='PlanePackerB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusAir.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='GlobalHalf'
          facet[:role]='OrganicAirTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GlobalPlanesHalf.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GlobalPlanesHalf.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GenericVishnuPlugin(envFile=PlanePacker.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GenericVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=PlanePacker.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('RSA.21-TSC.ARMY.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='RSA.21-TSC.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='RSA'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='GROUP'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Theater'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('TRANSCOM-20.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='TRANSCOM-20.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='TRANSCOM-20'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='ConusTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='AmmoTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TaskSorter'
          facet[:role]='StrategicTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]='JOINT'
          facet[:sca_supported_org]='OSD.GOV'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(1)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('1')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin(AmmoStrategicTransportationProvider,ConusStrategicTransportationProvider,EuroStrategicTransportationProvider)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('AmmoStrategicTransportationProvider')
          c.add_argument('ConusStrategicTransportationProvider')
          c.add_argument('EuroStrategicTransportationProvider')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=GLMT.TRANSCOM.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=GLMT.TRANSCOM.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TranscomRouterVishnuPlugin(envFile=TRANSCOM-20.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TranscomRouterVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=TRANSCOM-20.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('TheaterGroundA.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='TheaterGroundA.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='TheaterGroundA'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TheaterHalf'
          facet[:role]='FromPODGroundTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=TheaterGroundVehiclesHalf.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=TheaterGroundVehiclesHalf.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundVishnuPlugin(envFile=TheaterGround.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=TheaterGround.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('TheaterGroundB.TRANSCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='TheaterGroundB.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='TheaterGroundB'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='ConusSea.TRANSCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CSS'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Transcom'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='JOINT'
          facet[:mechanism]='TheaterHalf'
          facet[:role]='FromPODGroundTransportationProvider'
        end
        agent.add_facet do |facet|
          facet[:sca_echelon_of_support]=''
          facet[:sca_supported_org]='EuroTRANSCOM.TRANSCOM.MIL'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(3)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('3')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.lib.plugin.UTILLdmXMLPlugin(ldmFile=TheaterGroundVehiclesHalf.ldm.xml)') do |c|
          c.classname = 'org.cougaar.lib.plugin.UTILLdmXMLPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('ldmFile=TheaterGroundVehiclesHalf.ldm.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundVishnuPlugin(envFile=TheaterGround.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundVishnuPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=TheaterGround.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.GroundTransportAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.trans.TransportExpanderPlugin(envFile=GLMT.Transport.env.xml)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.trans.TransportExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('envFile=GLMT.Transport.env.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('USAEUR.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='USAEUR.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='USAEUR'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='USEUCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='5-CORPS.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='21-TSC-HQ.ARMY.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_facet do |facet|
          facet[:echelon_of_support]='US-ARMY'
          facet[:role]='ArmyCommander'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none,POLICY=ArmyFeedingPolicy.ldm.xml,DESTINATION=Subordinate)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=ArmyFeedingPolicy.ldm.xml')
          c.add_argument('DESTINATION=Subordinate')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
      node.add_agent('USEUCOM.MIL') do |agent|
        agent.classname='org.cougaar.core.agent.SimpleAgent'
        agent.add_facet do |facet|
          facet[:org_id]='USEUCOM.MIL'
        end
        agent.add_facet do |facet|
          facet[:orig_org_id]='USEUCOM'
        end
        agent.add_facet do |facet|
          facet[:superior_org_id]='OSD.GOV'
        end
        agent.add_facet do |facet|
          facet[:subordinate_org_id]='USAEUR.MIL'
        end
        agent.add_facet do |facet|
          facet[:home_location]='VDYD'
        end
        agent.add_facet do |facet|
          facet[:combat_support]='CMD'
        end
        agent.add_facet do |facet|
          facet[:echelon]='JOINT'
        end
        agent.add_facet do |facet|
          facet[:echelon_group]='Conus'
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet,/tasks)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.PlanViewServlet')
          c.add_argument('/tasks')
        end
        agent.add_component('org.cougaar.glm.servlet.GLMCompletionServlet(/completion)') do |c|
          c.classname = 'org.cougaar.glm.servlet.GLMCompletionServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/completion')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.HierarchyServlet,/hierarchy)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.planning.servlet.HierarchyServlet')
          c.add_argument('/hierarchy')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.mlm.ui.servlet.DataGathererServlet,/datagatherer)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.mlm.ui.servlet.DataGathererServlet')
          c.add_argument('/datagatherer')
        end
        agent.add_component('org.cougaar.logistics.servlet.LogisticsInventoryServletComponent(org.cougaar.logistics.servlet.LogisticsInventoryServlet,/log_inventory)') do |c|
          c.classname = 'org.cougaar.logistics.servlet.LogisticsInventoryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.logistics.servlet.LogisticsInventoryServlet')
          c.add_argument('/log_inventory')
        end
        agent.add_component('org.cougaar.planning.servlet.LoaderServletComponent(/load)') do |c|
          c.classname = 'org.cougaar.planning.servlet.LoaderServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/load')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet,/CSMART_AgentInfoServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.AgentInfoServlet')
          c.add_argument('/CSMART_AgentInfoServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet,/CSMART_CommunityProviderServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.CommunityProviderServlet')
          c.add_argument('/CSMART_CommunityProviderServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.MetricsServlet,/CSMART_MetricsServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.MetricsServlet')
          c.add_argument('/CSMART_MetricsServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.SearchServlet,/CSMART_SearchServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.SearchServlet')
          c.add_argument('/CSMART_SearchServlet')
        end
        agent.add_component('org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.tools.csmart.ui.servlet.PlanServlet,/CSMART_PlanServlet)') do |c|
          c.classname = 'org.cougaar.core.servlet.SimpleServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.tools.csmart.ui.servlet.PlanServlet')
          c.add_argument('/CSMART_PlanServlet')
        end
        agent.add_component('org.cougaar.core.wp.WhitePagesServlet(/wp)') do |c|
          c.classname = 'org.cougaar.core.wp.WhitePagesServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('/wp')
        end
        agent.add_component('org.cougaar.core.mobility.servlet.MoveAgentServlet()') do |c|
          c.classname = 'org.cougaar.core.mobility.servlet.MoveAgentServlet'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.core.mobility.service.RedirectMovePlugin()') do |c|
          c.classname = 'org.cougaar.core.mobility.service.RedirectMovePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.community.CommunityPlugin()') do |c|
          c.classname = 'org.cougaar.community.CommunityPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistrationServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent()') do |c|
          c.classname = 'org.cougaar.servicediscovery.service.UDDI4JRegistryQueryServiceComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.LineagePlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.LineagePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDRegistrationPlugin(0)') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDRegistrationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('0')
        end
        agent.add_component('org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent(org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet,/matchmaker_query)') do |c|
          c.classname = 'org.cougaar.servicediscovery.servlet.MatchMakerQueryServletComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('org.cougaar.servicediscovery.servlet.MatchMakerQueryServlet')
          c.add_argument('/matchmaker_query')
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDClientPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDClientPlugin'
          c.priority = 'LOW'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.servicediscovery.plugin.SDProviderPlugin()') do |c|
          c.classname = 'org.cougaar.servicediscovery.plugin.SDProviderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgDataPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgDataPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.OrgReportPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.OrgReportPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSExpanderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSExpanderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.ldm.OplanReaderPlugin()') do |c|
          c.classname = 'org.cougaar.mlm.plugin.ldm.OplanReaderPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.GenericTablePlugin(default_allocation_rules.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.GenericTablePlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('default_allocation_rules.xml')
        end
        agent.add_component('org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin(POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml,DESTINATION=none,POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml,DESTINATION=none)') do |c|
          c.classname = 'org.cougaar.logistics.plugin.policy.LogisticsPolicyManagerPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Ammunition.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-BulkPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-PackagedPOL.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Consumable.ldm.xml')
          c.add_argument('DESTINATION=none')
          c.add_argument('POLICY=InventoryPolicy-CONSUMER-Subsistence.ldm.xml')
          c.add_argument('DESTINATION=none')
        end
        agent.add_component('org.cougaar.mlm.plugin.generic.PropagationPlugin(forward.xml)') do |c|
          c.classname = 'org.cougaar.mlm.plugin.generic.PropagationPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
          c.add_argument('forward.xml')
        end
        agent.add_component('org.cougaar.core.qos.metrics.PersistenceAdapterPlugin') do |c|
          c.classname = 'org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.PluginManager.Plugin'
        end
        agent.add_component('org.cougaar.yp.YPClientComponent()') do |c|
          c.classname = 'org.cougaar.yp.YPClientComponent'
          c.priority = 'COMPONENT'
          c.insertionpoint = 'Node.AgentManager.Agent.YPService'
        end
      end
    end
  end
end
