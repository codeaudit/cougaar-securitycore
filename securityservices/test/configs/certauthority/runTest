#!/bin/tcsh

# Cougaar node simulation
# Set the properties below
set node = "TEST-ONE-NODE"

###########################################
# Choose one of the following exec classes:
set choice1="1: Keystore  - generate keys, send keys to CA and store result in keystore"
set choice2="2: PKCS#12   - wrap private key in a PKCS#12 envelope"
set choice3="3: JAAS      - simulate three security contexts (node/agent/PlugIn)"
set choice4="4: Hashtable - Test hashtables"
set choice5="5: Log4j     - Test log4j security capabilities"
set choice6="6: IDMEF     - Test JavaIDMEF library"

echo "Select test:"
echo "  ${choice1}"
echo "  ${choice2}"
echo "  ${choice3}"
echo "  ${choice4}"
echo "  ${choice5}"
echo "  ${choice6}"
echo "Enter your choice: [1, 2, 3, 4, 5, 6]"

set choice=$<

#############################
# Execution mode
echo "Select execution mode:"
echo "  1: with bootstrapper"
echo "  2: without bootstrapper"

set execmode=$<

switch (${choice})
case "1":
    # keystore test
    echo "Running ${choice1} ..."
    set execclass = com.nai.security.test.NodeCryptoSimulation
    set args = "-1 ${user} testalias RSA"
    set args = "${args} -10 certSignReq-ROOT-CA-CONUS-3ID-HHC.cer"
    set args = "${args} -7 SignedReq-ROOT-CA-THEATER-2-7-INFBN.cer"
    breaksw

case "2":
    # PKCS#12 test
    echo "Running ${choice2} ..."
    set execclass = com.nai.security.crypto.PrivateKeyPKCS12
    set args = "${node} testalias TEST-TWO-NODE"
    breaksw

case "3":
    # JAAS test
    echo "Running ${choice3} ..."
    set execclass = com.nai.security.test.jaas.Node
    set args = "${node}"
    breaksw

case "4":
    # Hashtable test
    echo "Running ${choice4} ..."
    set execclass = com.nai.security.test.TestHashtable
    set args = "${node}"
    breaksw

case "5":
    # log4j test
    echo "Running ${choice5} ..."
    set execclass = com.nai.security.test.LogTest
    set args = "log4j.conf"
    breaksw

case "6":
    # IDMEF test
    echo "Running ${choice6} ..."
    set execclass = com.nai.security.test.monitoring.Idmef
    set args = ""
    breaksw

default:
    echo "Invalid choice"
    exit
endsw

##########################################
set LIBPATHS=$COUGAAR_INSTALL_PATH/lib/bootstrapper.jar:$COUGAAR_INSTALL_PATH/lib/securebootstrapper.jar

if ( ${execmode} == "2") then
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/lib/securityservices.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/lib/core.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/xml4j.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/log4j.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/xerces.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/xmlparserv2.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/ibmpkcs.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/jce1_2_1.jar"
    set LIBPATHS="${LIBPATHS}:${COUGAAR_INSTALL_PATH}/sys/idmef.jar"
endif

if (! $?COUGAAR3RDPARTY) then
    setenv COUGAAR3RDPARTY /opt/cougaar-jars
endif

set MYDOMAINS=""
set MYPROPERTIES="$MYDOMAINS -Dorg.cougaar.system.path=$COUGAAR3RDPARTY -Dorg.cougaar.install.path=$COUGAAR_INSTALL_PATH -Duser.timezone=GMT -Dorg.cougaar.core.cluster.startTime=08/10/2005 -Dorg.cougaar.domain.planning.ldm.lps.ComplainingLP.level=0 -Dorg.cougaar.core.cluster.SharedPlugInManager.watching=false"

set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.security.bootstrap.keystore=$COUGAAR_INSTALL_PATH/configs/common/bootstrap_keystore"
set MYPROPERTIES="$MYPROPERTIES -Djava.security.policy=$COUGAAR_INSTALL_PATH/configs/common/Cougaar_Java.policy"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.security.useSecurityManager=true"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.security.useAuthenticatedLoader=true"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.message.transport.aspects=com.nai.security.crypto.SecurityAspect"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.security.crypto.config=cryptoPolicy.xml"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.security.role=${USER}"

##################
# debug properties
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.society.bootstrapper.loud=false"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.security.bootstrapper.policydebug=false"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.security.policy.debug=false"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.core.security.crypto.debug=true"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.message.transport.debug=false"

set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.install.path=${COUGAAR_INSTALL_PATH}"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.security.keystore=keystoreTest"
set MYPROPERTIES="$MYPROPERTIES -Dorg.cougaar.node.name=${node}"


if ($?COUGAAR_MYPROP) then
    set MYPROPERTIES="$MYPROPERTIES $COUGAAR_MYPROP"
endif
set MYMEMORY=""

set javaargs="$MYPROPERTIES $MYMEMORY -classpath ${LIBPATHS} "
set javaargs="$javaargs -Xbootclasspath/a:$COUGAAR_INSTALL_PATH/sys/jaas.jar"


switch (${execmode})
case "1":
# With bootstrapper
    java $javaargs \
	-Dorg.cougaar.security.keystore.password="Ultra*Log" \
	com.nai.security.bootstrap.SecureBootstrapper ${execclass} $args | tee runTest.log
    breaksw;
case "2":
# No bootstrapper
    java $javaargs \
	-Dorg.cougaar.security.keystore.password="Ultra*Log" \
	${execclass} $args | tee runTest.log
    breaksw;
default:
    echo "Unknown execution mode"
endsw

	#-Xdebug \
	#-Xrunjdwp:transport=dt_socket,server=y,suspend=n \

